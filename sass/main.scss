/*
COLORS:
Light green: #7ed56f, RGB: 126, 213, 111
Medium green: #55c57a, RGB: 85, 197, 122
Dark green: #28b485 RGB: 40, 180, 131

*/


/*
  **********  General Configs   ************
*/

/*
Universal selector to remove the margin and padding that is added by default in some web browsers
*/
$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;
*,
*::after
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}
html{
    font-size: 62.5%;
}
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 3rem;
    box-sizing: border-box;
}


/*
  **********  Header Configs   ************
*/

/*
clip-path:  to draw shapes, in this case we draw a polygon, it can have I think many
            points as I want, It goes clock-wise and have X, Y coordinates.
*/
.header{
    height: 95vh;
    background-image:linear-gradient(to right bottom,
                                    rgba($color-primary-light,0.8), 
                                    rgba($color-primary-dark,0.8)) ,
                                    url("../img/hero.jpg");
    background-size: cover;
    background-position: top;
    position: relative;
    clip-path: polygon(0 0,100% 0,100% 75vh,0 100%);
    -webkit-clip-path: polygon(0 0,100% 0,100% 75vh,0 100%);

    /*position: absolute = let me position my element with the top, right, bottom left 
                        attributtes it parent needs to have a relative position
                        (Like in autolayout)*/
    &____logo-box{
        position: absolute;
        top: 4rem;
        left: 4rem;
    }

    &__logo{
        height: 3.5rem;
    }
    
    &__header-box{
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%,-50%);
        text-align: center;
    
    }
}


.heading-primary {
    color: $color-white;
    text-transform: uppercase;
    /* Fix for a shake because of the parent element */
    backface-visibility: hidden;
    margin-bottom: 6rem;

    &--main {
        display: block;
        font-size: 6rem;
        font-weight: 400;
        letter-spacing: 3.5rem;
        animation: moveInLeft 1s ease-out;
        /*Amimation properties
        animation-delay: 3s;
        animation-iteration-count: 3;
        animation-timing-function: ease-out;
        */
    }
    &--sub {
        display: block;
        font-size: 2rem;
        font-weight: 700;
        letter-spacing: 1.75rem;
        animation: moveInRight 1s ease-out;
    }
}


.btn{
    /* Initial button state */
    &:link,
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 10rem;
        transition: all .2s;
        position: relative;
        font-size: 1.6rem;
    }
    /* Hover button state */
    &:hover{
        transform: translateY(-.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black,0.2);
        /* box-shadow: xValue, yValue, blurrValue color of shadow */

        &::after
        {
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }
    /* click button state */
    &:active{
        transform: translateY(-.1rem);
        box-shadow: 0 .5rem 1rem rgba($color-black,0.2);
    }
    &--white {
        background-color: $color-white;
        color: $color-grey-dark;
        &::after{
            background-color: $color-white
        }
    }
    &::after {
        position: absolute;
        top: 0;
        left: 0;
        /* content it's always necessary */
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        z-index: -1;
        transition: all .4s;

    }
    
    &--animated {
        /* animation: "name of the animation", time of the animation, animation timing function, delay*/
        animation: moveInBottom .5s ease-out .75s;
        /* animation-fill-mode: property specifies a style for the element when the animation is not playing 
            both = backwards
        */
        animation-fill-mode: backwards;
    }
}





